import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { HydratedDocument } from 'mongoose';
import * as mongoose from 'mongoose';
import { PartCreateTranscriptionResponse } from '../../chatgpt/interface/create.completion.response.usage.for.rpc.interface';

export type YTDataDocument = HydratedDocument<YTData>;

@Schema({
  timestamps: true,
  autoCreate: true,
})
export class YTData {
  // id is not required because it is auto-generated by MongoDB
  @Prop()
  id?: mongoose.Schema.Types.ObjectId;

  // yt id
  @Prop({
    type: String,
    required: true,
    unique: true,
  })
  ytId: string;

  // source youtube video url
  @Prop({
    type: String,
    required: true,
    unique: true,
  })
  url: string;

  // content text
  @Prop({
    type: Array<PartCreateTranscriptionResponse>,
    required: true,
  })
  data: PartCreateTranscriptionResponse[];

  // channel id
  @Prop({
    type: String,
    required: true,
  })
  channelId: string;

  // created At
  @Prop()
  createdAt: Date;

  // updated At
  @Prop()
  updatedAt: Date;
}

export const YTDataSchema = SchemaFactory.createForClass(YTData);
